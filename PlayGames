import javax.swing.JOptionPane;
import java.util.*;
public class PlayGames 
{

	
	public static void main (String[] args) 
	{
		PlayGames holdChoice = new PlayGames();
		
		int userChoice = userInput(); //holds our method for gaining user input
		holdChoice.inputConditions(userChoice);
	
	
	}
	public int userInput()
	{
		String userChoice;
		int numChosen;
		
		userChoice = JOptionPane.showInputDialog (null, "What game would you like to play?\n\n " +
													"Press 1 for the Dice Game. Press 2 for the Card Game. Press 3 to Quit.");
		numChosen = Integer.parseInt(userChoice);
		
				return numChosen;
		
	}

	public void inputConditions(int uc)
	{
		String output;
		switch (uc)
		{
		
			case 1:
			{
				 JOptionPane.showMessageDialog(null, "You have chosen the Dice Game.");
				// return dice game method call options in method call?
			break;	 
			}
			
			case 2:
			{
				JOptionPane.showMessageDialog(null, "You have chosen BlackJack.");
				//return method call for card game
				break;
			}
			
			case 3:
			{
				JOptionPane.showMessageDialog(null, "Goodbye");
				break;
			}
			default:
				JOptionPane.showMessageDialog(null, "You have entered an ivalid key");
		}
		
	public int DiceGameGenerator()
	
	{
		Random diceGenerator = new Random ();
		
		
			numChoice = JOptionPane.showInputDialog(null, "How many dice will you roll?");
			numChoice = Integer.parseInt();
			
			while (numChoice > 0 && numChoice <7)
			{
				totalRoll = JOptionPane.showInputDialog(null, "Guess what your total roll will be:");
				totalRoll = Integer.parseInt();
			while((totalRoll > 0) && (totalRoll <37))
			{
				JOptionPane.showMessageDialog(null, "You guessed: " + totalRoll);
			
				if (numChoice == 6)
				{
					int firstDie = diceGenerator.nextInt(5) + 1;
					int secondDie = diceGenerator.nextInt(5) + 1;
					int thirdDie = diceGenerator.nextInt(5) + 1;
					int fourthDie = diceGenerator.nextInt(5) + 1;
					int fifthDie = diceGenerator.nextInt(5) + 1;
					int sixthDie = diceGenerator.nextInt(5) + 1;
					totalOfDice = firstDie + secondDie + thirdDie +fourthDie + fifthDie + sixthDie;
					return firstDie, secondDie, thirdDie, fourthDie, fifthDie, sixthDie;
					return totalOfDice;
				
				}
				else if (numChoice == 5)
				{	
					int firstDie = diceGenerator.nextInt(5) + 1;
					int secondDie = diceGenerator.nextInt(5) + 1;
					int thirdDie = diceGenerator.nextInt(5) + 1;
					int fourthDie = diceGenerator.nextInt(5) + 1;
					int fifthDie = diceGenerator.nextInt(5) + 1;
					int sixthDie = diceGenerator.nextInt(5) + 1;
					
					totalOfDice = firstDie + secondDie + thirdDie +fourthDie + fifthDie;
					
					return firstDie, secondDie, thirdDie, fourthDie, fifthDie;
					return totalOfDice;
				}
	
				else if (numChoice == 4)
				{	
					int firstDie = diceGenerator.nextInt(5) + 1;
					int secondDie = diceGenerator.nextInt(5) + 1;
					int thirdDie = diceGenerator.nextInt(5) + 1;
					int fourthDie = diceGenerator.nextInt(5) + 1;
				
					totalOfDice = firstDie + secondDie + thirdDie +fourthDie;
					return firstDie, secondDie, thirdDie, fourthDie;
					return totalOfDice;
				}
				else if (numChoice == 3)
				{	
					int firstDie = diceGenerator.nextInt(5) + 1;
					int secondDie = diceGenerator.nextInt(5) + 1;
					int thirdDie = diceGenerator.nextInt(5) + 1;
					
					totalOfDice = firstDie + secondDie + thirdDie; 
					return firstDie, secondDie, thirdDie;
					return totalOfDice;
				}
				else if (numChoice == 2)
				{	
					int firstDie = diceGenerator.nextInt(5) + 1;
					int secondDie = diceGenerator.nextInt(5) + 1;
					
					totalOfDice = firstDie + secondDie;
					return firstDie, 
					return secondDie;
					return totalOfDice;
				}
				else if (numChoice == 1)
				{	
					int firstDie = diceGenerator.nextInt(5) + 1;
					
					totalOfDice = firstDie;
					return firstDie;
					return totalOfDice;
				}
				
				
			}
	
	}
	}
	}
